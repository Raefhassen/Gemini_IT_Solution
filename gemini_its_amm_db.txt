CREATE TABLE `gemini_its_amm_db`.`its_roles` (  `id` CHAR(36) NOT NULL,   `Role` VARCHAR(45) NOT NULL,   `Description` MEDIUMTEXT NULL,  PRIMARY KEY (`id`),  UNIQUE INDEX `id_UNIQUE` (`id` ASC),   UNIQUE INDEX `Role_UNIQUE` (`Role` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COLLATE = latin1_general_ci;
DROP TRIGGER IF EXISTS `gemini_its_amm_db`.`its_roles_BEFORE_INSERT`;

DELIMITER $$
USE `gemini_its_amm_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `gemini_its_amm_db`.`role_uniq_id` BEFORE INSERT ON `its_roles` FOR EACH ROW
BEGIN
  IF new.id IS NULL THEN
    SET new.id = uuid();
  END IF;
END$$
DELIMITER ;

INSERT INTO `gemini_its_amm_db`.`its_roles` (`Role`) VALUES ('SuperUser');
INSERT INTO `gemini_its_amm_db`.`its_roles` (`Role`) VALUES ('Administrator');
INSERT INTO `gemini_its_amm_db`.`its_roles` (`Role`) VALUES ('Manager');
INSERT INTO `gemini_its_amm_db`.`its_roles` (`Role`) VALUES ('Validator');
INSERT INTO `gemini_its_amm_db`.`its_roles` (`Role`) VALUES ('Approver');
INSERT INTO `gemini_its_amm_db`.`its_roles` (`Role`) VALUES ('User');

#############################################

CREATE TABLE `gemini_its_amm_db`.`its_users` (
   `id` CHAR(36) NOT NULL,
   `unb` INT(10) ZEROFILL NOT NULL AUTO_INCREMENT,
   `FirstName` CHAR(45) NULL,
   `LastName` CHAR(45) NULL,
   `eMailAdresse` CHAR(45) NULL,
   `Login` CHAR(45) NOT NULL,
   `Role` CHAR(36) NULL,
   `Passwordhash` LONGTEXT NOT NULL,
   `Creation` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (`id`),  
UNIQUE INDEX `id_UNIQUE` (`id` ASC),  
UNIQUE INDEX `unb_UNIQUE` (`unb` ASC),  
UNIQUE INDEX `Login_UNIQUE` (`Login` ASC))

ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1
COLLATE = latin1_general_ci;
DROP TRIGGER IF EXISTS `gemini_its_amm_db`.`its_users_BEFORE_INSERT`;

DELIMITER $$
USE `gemini_its_amm_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `gemini_its_amm_db`.`its_users_BEFORE_INSERT` BEFORE INSERT ON `its_users` FOR EACH ROW
   BEGIN  IF new.id IS NULL THEN     
   SET new.id = uuid();   
   END IF;
END$$
DELIMITER ;

ALTER TABLE `gemini_its_amm_db`.`its_users` ADD INDEX `AppRole_idx` (`Role` ASC);
ALTER TABLE `gemini_its_amm_db`.`its_users` ADD CONSTRAINT `AppRole`   FOREIGN KEY (`Role`)   REFERENCES `gemini_its_amm_db`.`its_roles` (`Role`)   ON DELETE NO ACTION   ON UPDATE NO ACTION;




